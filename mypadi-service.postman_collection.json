{
	"info": {
		"_postman_id": "ad1a3296-e215-417a-8656-bf42b51ac11a",
		"name": "mypadi-service",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "user",
			"item": [
				{
					"name": "signup",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "fullName",
									"value": "Post Man",
									"type": "text"
								},
								{
									"key": "emailAddress",
									"value": "hepostman@gmail.com",
									"type": "text"
								},
								{
									"key": "password",
									"value": "postman",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/user/signup",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"signup"
							]
						}
					},
					"response": []
				},
				{
					"name": "signin",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "fullName",
									"value": "Post Man",
									"type": "text"
								},
								{
									"key": "emailAddress",
									"value": "hepostman@gmail.com",
									"type": "text"
								},
								{
									"key": "password",
									"value": "postman",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/user/signup",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"signup"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "listing",
			"item": [
				{
					"name": "new",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response has a JSON body\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Response has a message property\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.be.a('string');\r",
									"});\r",
									"\r",
									"pm.test(\"Response has a data property\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data).to.be.a('object');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJoZXBvc3RtYW5AZ21haWwuY29tIiwiaXNzIjoiTXlQYWRpIEJhY2tlbmQiLCJpYXQiOjE2MTE3MTQzMDB9.7dUFXBMIX_RQHLbJeHEjGdW_pziTqkGdWwKBYps5AZY",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "name",
									"value": "Glorious Lounges",
									"type": "text"
								},
								{
									"key": "type",
									"value": "Hotel",
									"type": "text"
								},
								{
									"key": "address",
									"value": "No 1. Something street",
									"type": "text"
								},
								{
									"key": "rent",
									"value": "$100k per year",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/listing/new",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"listing",
								"new"
							],
							"query": [
								{
									"key": "n",
									"value": null,
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "home",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Contains a message property\", function() {\r",
							"    let jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.eql(\"You have reached postman test demo web service\");\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": []
				},
				"url": {
					"raw": "{{baseUrl}}",
					"host": [
						"{{baseUrl}}"
					]
				}
			},
			"response": []
		}
	]
}